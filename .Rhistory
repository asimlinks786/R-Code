ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=2, aes(shape=Tree))
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=19, aes(shape=Tree))
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=19, aes(shape=Tree))+
geom_line(type=1, size=1)
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=4, shape=19)+
geom_line(type=1,size=1)
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=19, aes(shape=Tree))+
geom_line(type=1, size=1)
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=19, aes(shape=Tree))+
geom_line(type=3, size=1)
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=19, aes(shape=Tree))+
geom_line(type=5, size=1)
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=19, aes(shape=Tree))+
geom_line(type=2, size=1)
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=19, aes(shape=Tree))+
geom_line(type=6, size=1)
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=19, aes(shape=Tree))+
geom_line(type=10, size=1)
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=19, aes(shape=Tree))+
geom_line(type=15, size=1)
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=19, aes(shape=Tree))+
geom_line(type=25, size=1)
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=19, aes(shape=Tree))+
geom_line(type=1, size=1)
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=19, aes(shape=Tree))+
geom_line(aes(linetype=Tree), size=1)
ggsave("scatter.pdf")
ggsave("scatter.pdf")
ggsave("scatter.pdf")
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=19, aes(shape=Tree))+
geom_line(aes(linetype=Tree), size=1)+
labs(x="All Age", y="Circumference", title="Main Graph")
ggsave("scatter.pdf")
install.packages("viridis")
library(viridis)
data("quakes")
View("quakes")
View(quakes)
q<-quakes[seq(from=1 to 1000, by=10),]
q<-quakes[seq(from=1, to= 1000, by=10),]
View(q)
nrows(q)
nrows("q")
nrow("q")
nrow(q)
ggplot(data=q, aes(lat,long), color=mag)
ggplot(data=q, aes(lat,long), color=mag)+
geom_point(aes(size=mag))
ggplot(data=q, aes(lat,long), color=mag)+
geom_point(aes(size=mag, color=mag))
ggplot(data=q, aes(lat,long), color=mag)+
geom_point(aes(size=mag, color=mag))+
guides(size=F)
ggplot(data=q, aes(lat,long), color=mag)+
geom_point(aes(size=mag, color=mag))+
guides(size=F)+
scale_colour_viridis_b(option="B")
ggplot(data=q, aes(lat,long), color=mag)+
geom_point(aes(size=mag, color=mag))+
guides(size=F)+
scale_colour_viridis_b(option="B")+
scale_size_continuous(range=c(1,9))
ggplot(data=q, aes(lat,long), color=mag)+
geom_point(aes(size=mag, color=mag))+
guides(size=F)+
scale_colour_viridis_b(option="B")+
scale_size_continuous(range=c(1,9))+
labs(x="Latitude Information", y="Longitude", title="Graph")
ggsave("scatter.jpg")
ggsave("scatter.jpg")
ggsave("scatter.jpg")
ggsave("scatter.jpg")
data("diamonds")
nrow(diamonds)
View(diamonds)
d1<-diamonds[seq(from=1, to=49000, by=1000),]
View(d1)
d1<-diamonds[seq(from=1, to=49000, by=100),]
nrow(d1)
ggplot(data=d1, aes(x=cut,y=price, color=cut)+ geom_jitter()
ggplot(data=d1, aes(x=cut,y=price, color=cut)+ geom_jitter())
ggplot(data=d1, aes(x=cut,y=price, color=cut))+ geom_jitter()
d1<-diamonds[seq(from=1, to=49000, by=10),]
ggplot(data=d1, aes(x=cut,y=price, color=cut))+ geom_jitter()
ggplot(data=d1, aes(x=cut,y=price, color=cut))+ geom_jitter()+
labs(x="All Categories", y="Total Price")
ggplot(data=d1, aes(x=cut,y=price, color=cut))+ geom_jitter()+
labs(x="All Categories", y="Total Price", title="Jitter Graph Presentation")
ggsave("jiter.png")
ggplot(data=d1, aes(x=cut,y=price, color=cut))+ geom_jitter()+
labs(x="All Categories", y="Total Price", title="Jitter Graph Presentation")
ggplot(data=q, aes(lat,long), color=mag)+
geom_point(aes(size=mag, color=mag))+
guides(size=F)+
scale_colour_viridis_b(option="B")+
scale_size_continuous(range=c(1,9))+
labs(x="Latitude Information", y="Longitude", title="Bubble Graph")
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=9, shape=19, aes(shape=Tree))+
geom_line(aes(linetype=Tree), size=1)+
labs(x="All Age", y="Circumference", title="Main Graph")
ggplot(Orange, aes(age,circumference, color=Tree))+
geom_point(size=4, shape=19)+
geom_line(type=1,size=1)
ggplot(data=cars, aes(x=speed, y=dist))+
geom_point()+
geom_smooth(method = "lm", se=F)
install.packages("ggthemes")
install.packages("multcompView")
library(ggplot2)
library(ggthemes)
library(dplyr)
data("chickwts")
mean_data<-group_by(chickwts,feed) %>%
summarise(weight_mean=mean(weight), sd=sd(weight)) %>%
arrange(desc(weight_mean))
tibble(mean_data)
View(mean_data)
ggplot(data=mean_data,aes(feed,weight,color=feed)+
geom_bar())
ggplot(data=d, aes(x=region, y=income, fill=region)) + stat_summary(fun=mean,geom="bar")+ labs(title="New plot title",subtitle= "A subtitle",x ="All Rejion Information",  y=" Income Information")
barplot(d$age)
barplot(d$age)
ggplot(data=mean_data,aes(feed,weight,color=feed)+
geom_bar())
ggplot(data=mean_data,aes(feed,weight)+
geom_bar())
ggplot(data=mean_data,aes(x=feed,y=weight)+
geom_bar())
ggplot(data=mean_data,aes(x=feed,y=weight), color=feed +
geom_bar())
ggplot(data=mean_data,aes(x=feed,y=weight), fill=feed +
geom_bar())
View(mean_data)
ggplot(data=mean_data,aes(x=feed,y=weight_mean), fill=feed +
geom_bar())
ggplot(data=mean_data,aes(x=feed,y=weight_mean), fill=feed) +
geom_bar()
geom_bar()
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_bar()
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_bar()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), fill=feed) +
geom_bar()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), fill=feed) +
geom_bar()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), fill=feed) +
geom_bar(stat = "identity")
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat = "identity")
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat = "identity")+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(color="blue", fill=rgb(0.1,0.4,0.5,0.7) )+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(color="blue", fill=rgb(0.1,0.4,0.5,0.7))+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar()+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar( ) +
scale_fill_hue(feed = 40) +
theme(legend.position="none")
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat = "identity")+
coord_flip()+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(color="blue", fill=rgb(0.1,0.4,0.5,0.7) ) +
scale_fill_hue(feed = 40) +
theme(legend.position="none")
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(color="blue", fill=rgb(0.1,0.4,0.5,0.7) ) +
scale_fill_hue(feed = 40) +
theme(legend.position="none")
ggplot(data=mean_data,aes(x=feed,y=weight_mean)) +
geom_bar(aes(fill = feed)) +
theme(legend.position="none")
ggplot(data=mean_data,aes(x=feed,y=weight_mean)) +
geom_bar(aes(fill = feed))
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_bar(aes(fill = feed)) +
theme(legend.position="none")
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_bar()
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_col()
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_col() +
theme(legend.position="none")
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_col() +
theme(legend.position="none")+
theme_base()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat = "identity")+
coord_flip()+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat = "identity")+
coord_flip()+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat = "identity")+
#  coord_flip()+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_col() +
theme(legend.position="none")+
theme_base()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat="identity", position = position_stack(reverse=TRUE)) +
guides(fill = guide_legend(reverse=TRUE))+
#  coord_flip()+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat = "identity")+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat = "identity", , position = "dodge)+
theme_bw()
#-------------flipping the coordinate------------
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat="identity", position = position_stack(reverse=TRUE)) +
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat = "identity", , position = "dodge")+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat = "identity", , position = dodge)+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat = "identity", position = dodge)+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat = "identity", position = "dodge")+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat = "identity", position = "dodge")+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(values = c("red", "blue"))+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat="identity", position ="dodge") +
scale_fill_manual(values = c("red", "blue"))+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean)) +
geom_bar(stat="identity", position ="dodge") +
scale_fill_manual(values = c("red", "blue"))+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean)) +
geom_bar(stat="identity", position ="dodge") +
scale_fill_manual(values = c("red", "blue"))+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean)) +
geom_bar(stat="identity", position ="dodge") +
scale_fill_manual(values = c("red", "blue"))+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean)) +
geom_bar(stat="identity", position ="dodge") +
scale_fill_manual(values=c("red", "blue"))+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean)) +
geom_bar(stat="identity", position =position_dodge(0.8)) +
scale_fill_manual(values=c("red", "blue"))+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean)) +
geom_bar() +
scale_fill_manual(values=c("red", "blue"))+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean)) +
geom_bar(stat="identity", position =position_dodge(0.8)) +
scale_fill_manual(values=c("red", "blue"))+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_col() +
theme(legend.position="none")+
theme_base()
ggplot(data=mean_data,aes(x=feed,y=weight_mean)) +
geom_bar(stat="identity", position =position_dodge(0.8)) +
scale_fill_manual(values=c("red", "blue"))+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean), color=feed) +
geom_bar(stat="identity", position = position_stack(reverse=TRUE)) +
guides(fill = guide_legend(reverse=TRUE))+
#  coord_flip()+
theme_bw()
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_col() +
theme(legend.position="none")+
labs(title="New plot title",subtitle= "A subtitle",x ="All Rejion Information",  y=" Income Information") +
theme_base()
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_col() +
theme(legend.position="none")+
labs(title="New plot title",subtitle= "A subtitle",x ="Feed Information",  y=" Wight Information") +
theme_base()
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_col() +
theme(legend.position="none")+
labs(title="Bar Graph",subtitle= "A subtitle",x ="Feed Information",  y=" Wight Information") +
theme_base()
save("bar2.jpg")
save("bar2.png")
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_col() +
theme(legend.position="none")+
labs(title="Bar Graph",subtitle= "A subtitle",x ="Feed Information",  y=" Wight Information") +
theme_base()+
save("bar2.png")
ggsave("bar2.jpg")
ggplot(data=mean_data,aes(x=feed,y=weight_mean)) +
geom_col() +
theme(legend.position="none")+
labs(title="Bar Graph",subtitle= "A subtitle",x ="Feed Information",  y=" Wight Information") +
theme_base()
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_col() +
theme(legend.position="none")+
labs(title="Bar Graph",subtitle= "A subtitle",x ="Feed Information",  y=" Wight Information") +
theme_base()
ggplot(data=mean_data,aes(x=feed,y=weight_mean, fill=feed)) +
geom_col() +
theme(legend.position="none")+
labs(title="Bar Graph",subtitle= "All feed categories ",x ="Feed Information",  y=" Wight Information") +
theme_base()
ggsave("bar2.jpg")
install.packages("devtools")
install.packages("esquisse")
install.packages("esquisse")
install.packages("hrbrthemes")
install.packages("ggpubfigs")
library(readxl)
library(tidyverse)
library(ggpubfigs)
library(readxl)
library(tidyverse)
library(ggpubfigs)
devtools::install_github("JLSteenwyk/ggpubfigs")
library(ggpubfigs)
library(tidyverse)
library(ggpubfigs)
library(esquisse)
library(hrbrthemes)
library(hrbrthemes)
library(readxl)
library(tidyverse)
library(ggpubfigs)
library(esquisse)
library(hrbrthemes)
library(devtools)
data("midwest")
data("iris")
data("mtcars")
esquisser()
data("midwest")
data("iris")
data("mtcars")
esquisser()
midwest %>%
filter(popwhite >= 0L & popwhite <= 1950000L) %>%
filter(category %in% c("AAR", "LHR", "LAR",
"HAU", "LAU", "LHU")) %>%
ggplot() +
aes(x = category, fill = category, weight = poptotal) +
geom_bar(position = "dodge") +
scale_fill_manual(
values = c(AAR = "#F8766D",
AAU = "#E48432",
AHR = "#CE9300",
AHU = "#ACA000",
ALR = "#7FAC07",
ALU = "#31B425",
HAR = "#00BB4C",
HAU = "#00BF83",
HHR = "#00BEB1",
HHU = "#00BAD5",
HLR = "#20AFEC",
HLU = "#549FFB",
LAR = "#918BFD",
LAU = "#9805D9",
LHR = "#E20A0A",
LHU = "#FF61C3")
) +
theme_bw()
esquisser()
midwest %>%
filter(popwhite >= 0L & popwhite <= 1950000L) %>%
filter(category %in% c("AAR", "LHR", "LAR",
"HAU", "LAU", "LHU")) %>%
ggplot() +
aes(x = category, fill = category, weight = poptotal) +
geom_bar(position = "dodge") +
scale_fill_manual(
values = c(AAR = "#F8766D",
AAU = "#E48432",
AHR = "#CE9300",
AHU = "#ACA000",
ALR = "#7FAC07",
ALU = "#31B425",
HAR = "#00BB4C",
HAU = "#00BF83",
HHR = "#00BEB1",
HHU = "#00BAD5",
HLR = "#20AFEC",
HLU = "#549FFB",
LAR = "#918BFD",/
esquisser()
esquisser()
ggplot(iris) +
aes(x = Species, fill = Species, weight = Sepal.Length) +
geom_bar() +
scale_fill_manual(values = c(setosa = "#440154",
versicolor = "#12D4CB", virginica = "#03F22F")) +
labs(title = "Iris Data Set Visualization") +
theme_bw() +
theme(plot.title = element_text(size = 14L, face = "bold", hjust = 0.5))
install.packages("tidyverse")
install.packages("tidyr")
install.packages("tidyverse")
install.packages("tidyr")
library(tidyverse)
library(tidyr)
x<-mtcars
help("summarise")
summarise(x,average=mean(mpg))
count(X,mpg)
count(x,mpg)
# A summary applied to ungrouped tbl returns a single row
mtcars %>%
summarise(mean = mean(disp), n = n())
View(mtcars)
mtcars %>%
summarise(meanValue = mean(disp), n = n())
# dplyr 1.0.0 allows to summarise to more than one value:
mtcars %>%
group_by(cyl) %>%
summarise(qs = quantile(disp, c(0.25, 0.75)), prob = c(0.25, 0.75))
filter(mtcars,mpg>20)
s<-filter(mtcars,mpg>20)
View(s)
View(s2)
View(s2)
s2<-distinct(mtcars,gear)
View(s2)
s3<-slice(mtcars, 12:15)
View(s3)
s4<-slice_sample(mtcars,mpg, prop = 0.5)
s4<- slice_sample(mtcars,mpg, prop = 0.5)
s4<- slice_min(mtcars,mpg, prop = 0.5)
View(s4)
s4<- slice_min(mtcars,mpg, prop = 0.4)
View(s4)
s4<- slice_min(mtcars,mpg, prop = 1)
View(s4)
s5<-slice_head(mtcars, n=10,mpg)
s5<-slice_head(mtcars, n=10)
View(s5)
arrange(mtcars,mpg)
arrange(mtcars,desc(mpg))
cars<-add_row(cars,speed=20,dist=5)
View(cars)
cars[is.na(cars)]=0
cars<-add_row(cars,speed="",dist=5)
cars<-add_row(cars,dist=5)
View(cars)
cars[is.na(cars)]=0
View(cars)
cars<-add_row(cars,dist=9)
View(cars)
cars[is.na(speed)]=0
cars[is.nan(speed)]=0
select(mtcars,mpg)
select(mtcars,mpg,wt)
w<-select(mtcars,mpg,wt)
View(w)
x3<summarise(mtcars,across(everything(),mean))
x3<-summarise(mtcars,across(everything(),mean))
View(x3)
x3<-summarise(mtcars,across(everything(),mean,median)
View(x3)
x3<-summarise(mtcars,across(everything(),mean,median))
x3<-summarise(mtcars,across(everything(),mean))
View(x3)
install.packages("plot3D")
library(plot3D)
data("iris")
head(iris)
